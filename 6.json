[
  { "question": "package.json", "answers": ["{ \"name\": \"tf-chat\", \"version\": \"1.0.0\", \"description\": \"TF-Chat: simple QA server + frontend\", \"main\": \"server.js\", \"scripts\": { \"start\": \"node server.js\", \"dev\": \"nodemon server.js\", \"reload-qa\": \"node -e \\\"require('./server').loadQA && console.log('reload')\\\"\" }, \"author\": \"D'H7 | Tergene\", \"license\": \"MIT\", \"dependencies\": { \"body-parser\": \"^1.20.2\", \"express\": \"^4.18.2\" }, \"devDependencies\": { \"nodemon\": \"^2.0.22\" } }"] },
  { "question": "index.html", "answers": ["<!doctype html>\n<html lang='ht'>\n<head>\n  <meta charset='utf-8' />\n  <meta name='viewport' content='width=device-width,initial-scale=1' />\n  <title>TF-Chat</title>\n  <link rel='stylesheet' href='/styles.css'>\n</head>\n<body>\n  <header><h1>Bonjou ou sou TF-Chat</h1></header>\n  <main>\n    <section id='chat' class='card'>\n      <div id='messages' class='messages'></div>\n      <form id='askForm'>\n        <input id='q' placeholder='Ekri kesyon w (eg: \"hey\")' autocomplete='off' />\n        <button type='submit'>Voie</button>\n      </form>\n    </section>\n    <section class='card'>\n      <h2>Ajoute videyo w pou afiche</h2>\n      <input id='videoInput' type='file' accept='video/*' />\n      <div id='videoPreview' class='video-preview'></div>\n    </section>\n  </main>\n  <script src='/app.js'></script>\n</body>\n</html>"] },
  { "question": "dependance", "answers": ["# 1. enstale deps\nnpm install\n\n# 2. si ou vle dev (nodemon)\nnpm install --save-dev nodemon\n\n# 3. demare dev server (reload otomatik)\nnpm run dev\n\n# oswa kouri nòmal\nnpm start\n\n# 4. update tout packages si bezwen\nnpm update\n\n# 5. korije vuln rapid (si genyen)\nnpm audit fix\n\n# 6. si ou vle fòse mizajou (sèvi ak atansyon)\nnpm audit fix --force"] },
  { "question": "frontend", "answers": ["// Frontend: send question to /api/ask and show bot reply\nconst messagesEl = document.getElementById('messages');\nconst form = document.getElementById('askForm');\nconst qInput = document.getElementById('q');\n\nfunction addMessage(text, cls='bot') {\n  const d = document.createElement('div');\n  d.className = 'message ' + (cls==='user' ? 'user' : 'bot');\n  d.textContent = text;\n  messagesEl.appendChild(d);\n  messagesEl.scrollTop = messagesEl.scrollHeight;\n}\n\nform.addEventListener('submit', async e => {\n  e.preventDefault();\n  const q = qInput.value.trim();\n  if(!q) return;\n  addMessage(q, 'user');\n  qInput.value = '';\n  addMessage('...ap panse', 'bot');\n  try {\n    const r = await fetch('/api/ask', {\n      method: 'POST',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({question: q})\n    });\n    const data = await r.json();\n    const last = messagesEl.querySelectorAll('.message');\n    if(last.length) last[last.length-1].remove();\n    addMessage(data.answer || 'M pa gen repons pou sa.');\n  } catch(err){\n    console.error(err);\n    addMessage('Erè rezo. Eseye ankò.');\n  }\n});\n\nconst videoInput = document.getElementById('videoInput');\nconst videoPreview = document.getElementById('videoPreview');\nvideoInput.addEventListener('change', () => {\n  videoPreview.innerHTML = '';\n  const f = videoInput.files && videoInput.files[0];\n  if(!f) return;\n  const url = URL.createObjectURL(f);\n  const v = document.createElement('video');\n  v.controls = true;\n  v.src = url;\n  v.preload = 'metadata';\n  videoPreview.appendChild(v);\n});"] },
  { "question": "server.js", "answers": ["// Express server with QA JSON\nconst express = require('express');\nconst fs = require('fs');\nconst path = require('path');\nconst bodyParser = require('body-parser');\n\nconst app = express();\nconst PORT = process.env.PORT || 3000;\n\napp.use(bodyParser.json());\napp.use(express.static(path.join(__dirname, 'public')));\n\nlet qaPool = [];\nfunction normalizeText(s){\n  if(!s) return '';\n  return String(s).normalize('NFD').replace(/[\u0300-\u036f]/g,'').toLowerCase().replace(/[^a-z0-9\\s]/g,'').replace(/\\s+/g,' ').trim();\n}\nfunction levenshtein(a,b){ /* same function */ }\nfunction loadQA(){ /* load JSON files from qa/index.json */ }\nfunction findBest(question){ /* exact -> include -> fuzzy */ }\napp.post('/api/ask', (req,res)=>{ /* send answer */ });\napp.get('/api/reload-qa',(req,res)=>{ loadQA(); res.json({ok:true,count:qaPool.length}); });\nloadQA();\napp.listen(PORT, ()=>console.log(`TF-Chat server koute http://localhost:${PORT}`));"] },
  { "question": "preview video", "answers": ["const videoInput = document.getElementById('videoInput');\nconst videoPreview = document.getElementById('videoPreview');\nvideoInput.addEventListener('change',()=>{\n  videoPreview.innerHTML='';\n  const f=videoInput.files?.[0];\n  if(!f) return;\n  const url=URL.createObjectURL(f);\n  const v=document.createElement('video');\n  v.controls=true;\n  v.src=url;\n  v.preload='metadata';\n  videoPreview.appendChild(v);\n});"] },
  { "question": "root", "answers": [":root{font-family:Inter, Arial, sans-serif} body{margin:0;background:#f5f6fa;color:#111} header{background:#fff;padding:18px 20px;box-shadow:0 2px 6px rgba(0,0,0,.06)} header h1{margin:0;font-size:18px} main{display:grid;grid-template-columns:1fr;gap:16px;padding:18px;max-width:900px;margin:0 auto} .card{background:#fff;border-radius:8px;padding:14px;box-shadow:0 2px 6px rgba(0,0,0,.04)} .messages{min-height:120px;max-height:320px;overflow:auto;padding:8px;border:1px solid #eee;border-radius:6px} .message{margin:8px 0;padding:8px 10px;border-radius:8px;background:#eef7ff;max-width:80%} .message.bot{background:#fff;border:1px solid #ddd;align-self:flex-start} .message.user{background:#dff7df;align-self:flex-end;margin-left:auto} #askForm{display:flex;gap:8px;margin-top:8px} #askForm input{flex:1;padding:10px;border-radius:8px;border:1px solid #ccc} #askForm button{padding:10px 14px;border-radius:8px;border:none;background:#0b76ff;color:#fff;cursor:pointer} .video-preview video{max-width:100%;height:auto;border-radius:8px;margin-top:10px}"] },
  { "question": "sa k pase?", "answers": [""] },
  { "question": "kisa w ka fè?", "answers": ["Mwen reponn kesyon kout ki nan fichye a."] },
  { "question": "m fatige", "answers": ["Pran yon ti repo, bwè dlo."] },
  { "question": "m grangou", "answers": ["Manje yon bagay lejè tankou fwi."] },
  { "question": "bye", "answers": ["Orevwa! Pase yon bèl jounen."] },
  { "question": "byebye", "answers": ["Orevwa — a la pwochen!"] },
  { "question": "talo", "answers": ["Mwen pa konprann — ekri l yon lòt fason."] },
  { "question": "repete sa", "answers": ["Menm bagay la ankò: mande m yon kesyon kout."] },
  { "question": "kisa ou ye", "answers": ["Yon bot ki bay repons kout."] },
  { "question": "ki objektif ou?", "answers": ["Fasilite repons kout pou itilizatè yo."] }
]
